/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package initial;

import static lib.DBConnection.*;

import javax.swing.*;
import java.awt.*;

import static lib.Time.*;


/**
 *
 * @author Hantao
 */
public class DailyTracker extends JPanel implements Runnable {
	private static final String stop = "Stop";
	private static final String start = "Start";
	private static final String defaultTime = "00:00:00";

	private Thread thread;
	private int hourCounter = 0;
	private int minuteCounter = 0;
	private int secondCounter = 0;
	private String string = "";
	private String minuteString = "";
	private String distanceString = "";
	private String timeString = "";
	private	int counter = 0;
	private	int counter2 = 0;

	/**
	 * Creates new form DailyTracker
	 */
	public DailyTracker() {
		initComponents();
		thread = new Thread(this);
	}

	public void reset(){
		hourCounter = 0;
		minuteCounter = 0;
		secondCounter = 0;
		timeString = defaultTime;
//		distanceString ="";
		display();
	}

	public void display(){
		stopWatchLabel.setText(timeString);
	}

	public void setTimeCounter(){
		timeString ="";
		if (hourCounter <10) {
			timeString ="0"+ hourCounter;
		}
		else {
			timeString =""+ hourCounter;
		}

		if (minuteCounter <10) {
			timeString +=":0"+ minuteCounter;
		}
		else {
			timeString +=":"+ minuteCounter;
		}

		if (secondCounter <10) {
			timeString +=":0"+ secondCounter;
		}
		else {
			timeString +=":"+ secondCounter;
		}
	}


	public void run() {
		int fast = 30;
		while(true) {
			try {
				secondCounter += fast;
				if (secondCounter >59) {
					secondCounter =0;
					minuteCounter += fast;
				}
				if (minuteCounter >59) {
					minuteCounter =0;
					hourCounter += fast;
				}
				setTimeCounter();
				display();
				Thread.sleep(1000);
			} catch (Exception e){

			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();

		dateLabel = new javax.swing.JLabel();

		pushupFieldLabel = new javax.swing.JLabel();
		situpFieldLabel = new javax.swing.JLabel();
		distanceFieldLabel = new javax.swing.JLabel();

		pushupInputField = new javax.swing.JTextField();
		situpInputField = new javax.swing.JTextField();
		distanceInputField = new javax.swing.JTextField();

		recordPushButton = new javax.swing.JButton();
		recordSitButton = new javax.swing.JButton();
		recordDistanceButton = new javax.swing.JButton();

		maxPushupLabel = new javax.swing.JLabel();
		maxSitupLabel = new javax.swing.JLabel();
		maxDistanceLabel = new javax.swing.JLabel();

		pushupLabel = new javax.swing.JLabel();
		situpLabel = new javax.swing.JLabel();
		distanceLabel = new javax.swing.JLabel();

		stopWatchLabel = new javax.swing.JLabel();
		stopWatchStartButton = new javax.swing.JButton();
		stopWatchResetButton = new javax.swing.JButton();

		timerLabel = new javax.swing.JLabel();
		timerInputField = new javax.swing.JTextField();
		timerStartButton = new javax.swing.JButton();
		timerResetButton = new javax.swing.JButton();

		submitButton = new javax.swing.JButton();
		viewDatabaseButton = new javax.swing.JButton();

		stopWatchLabel.setFont(new java.awt.Font("Digital-7 Mono", Font.BOLD, 48)); // NOI18N
		stopWatchLabel.setText(defaultTime);

		stopWatchStartButton.setText(start);
		stopWatchStartButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				stopWatchStartActionPerformed(evt);
			}
		});

		stopWatchResetButton.setText("Reset");
		stopWatchResetButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				stopWatchResetActionPerformed(evt);
			}
		});

		timerStartButton.setText(start);
		timerStartButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				timerStartActionPerformed(evt);
			}
		});

		timerResetButton.setText("Reset");
		timerResetButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				timerResetActionPerformed(evt);
			}
		});

		timerInputField.setText(defaultTime);

		pushupFieldLabel.setText("Pushups");
		situpFieldLabel.setText("Situps");
		distanceFieldLabel.setText("Distance");

		pushupInputField.setText("0");
		situpInputField.setText("0");
		distanceInputField.setText("0");

		recordPushButton.setText("Record");
		recordPushButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordPushActionPerformed(evt);
			}
		});

		recordSitButton.setText("Record");
		recordSitButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordSitActionPerformed(evt);
			}
		});

		recordDistanceButton.setText("Record");
		recordDistanceButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordDistanceActionPerformed(evt);
			}
		});

		submitButton.setText("Submit Stats");
		submitButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				submitResultsActionPerformed(evt);
			}
		});

		viewDatabaseButton.setText("View Database");
		viewDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				viewDatabaseActionPerformed(evt);
			}
		});

		dateLabel.setText(getFormattedDate());

		maxPushupLabel.setText("Max Pushups");
		pushupLabel.setText("0");

		maxSitupLabel.setText("Max Situps");
		situpLabel.setText("0");

		maxDistanceLabel.setText("Max Distance");
		distanceLabel.setText("0");

		timerLabel.setFont(new java.awt.Font("Digital-7 Mono", Font.BOLD, 48)); // NOI18N
		timerLabel.setText(defaultTime);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
					.addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addComponent(situpFieldLabel)
							.addComponent(pushupFieldLabel)
							.addComponent(distanceFieldLabel))
						.addGap(60, 60, 60)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
							.addComponent(pushupInputField, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
							.addComponent(situpInputField)
							.addComponent(distanceInputField))
						.addGap(30, 30, 30)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addComponent(recordPushButton)
							.addComponent(recordSitButton)
							.addComponent(recordDistanceButton))
						.addGap(30, 30, 30)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(150, 150, 150))
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(0, 0, Short.MAX_VALUE)
						.addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
					.addGroup(jPanel1Layout.createSequentialGroup()
							.addComponent(maxDistanceLabel)
							.addGap(18, 18, 18)
							.addComponent(distanceLabel))
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(jPanel1Layout.createSequentialGroup()
								.addComponent(maxPushupLabel)
								.addGap(18, 18, 18)
								.addComponent(pushupLabel))
							.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(stopWatchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel1Layout.createSequentialGroup()
									.addComponent(stopWatchStartButton)
									.addGap(97, 97, 97)
									.addComponent(stopWatchResetButton))
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
									.addGap(25, 25, 25)
									.addComponent(submitButton)
									.addGap(25, 25, 25)
									.addComponent(viewDatabaseButton))))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
							.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
								.addComponent(maxSitupLabel)
								.addGap(18, 18, 18)
								.addComponent(situpLabel)
								.addGap(195, 195, 195))
							.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
									.addComponent(timerStartButton)
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
									.addComponent(timerResetButton)
									.addGap(26, 26, 26))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
									.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(timerInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
									.addContainerGap()))))))
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(30, 30, 30)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(pushupFieldLabel)
					.addComponent(pushupInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addComponent(recordPushButton))
					.addGap(30, 30, 30)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(situpFieldLabel)
					.addComponent(situpInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addComponent(recordSitButton))
					.addGap(30, 30, 30)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(distanceFieldLabel)
					.addComponent(distanceInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addComponent(recordDistanceButton))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(maxPushupLabel)
					.addComponent(pushupLabel)
					.addComponent(maxSitupLabel)
					.addComponent(situpLabel)
					.addComponent(maxDistanceLabel)
					.addComponent(distanceLabel))
				.addGap(27, 27, 27)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(stopWatchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
					.addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addComponent(timerInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(15, 15, 15)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(stopWatchStartButton)
					.addComponent(stopWatchResetButton)
					.addComponent(timerStartButton)
					.addComponent(timerResetButton))
				.addGap(40, 40, 40)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
					.addComponent(submitButton)
					.addComponent(viewDatabaseButton))
)
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(0, 79, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(0, 0, Short.MAX_VALUE))
		);
	}// </editor-fold>

	private void recordPushActionPerformed(java.awt.event.ActionEvent evt) {
		int pushNum;
		try {
			pushNum = Integer.parseInt(pushupInputField.getText());
			pushupLabel.setText(Integer.toString(pushNum));
		} catch(Exception e1) {
			JOptionPane.showMessageDialog(null, "Please Enter a Valid Number");
		}
	}

	private void recordSitActionPerformed(java.awt.event.ActionEvent evt) {
		int sitNum;
		try {
			sitNum = Integer.parseInt(situpInputField.getText());
			situpLabel.setText(Integer.toString(sitNum));

		} catch(Exception e1) {
			JOptionPane.showMessageDialog(null, "Please Enter a Valid Number");
		}
	}

	private void recordDistanceActionPerformed(java.awt.event.ActionEvent evt) {
		int runNum;
		try {
			runNum = Integer.parseInt(distanceInputField.getText());
			distanceLabel.setText(Integer.toString(runNum));

		} catch(Exception e1) {
			JOptionPane.showMessageDialog(null, "Please Enter a Valid Number");
		}
	}

	private void stopWatchStartActionPerformed(java.awt.event.ActionEvent evt) {
		if (stopWatchStartButton.getText().equals(start)) {
			stopWatchStartButton.setText(stop);

			if (counter == 0) {
				counter++;
				thread.start();
			}
			else {
				thread.resume();
			}
		}
		else {
			stopWatchStartButton.setText(start);
			thread.suspend();
		}
	}

	private void stopWatchResetActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
		thread.suspend();
		stopWatchStartButton.setText("Start");

	}

	private void timerStartActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:

	}

	private void timerResetActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void submitResultsActionPerformed(java.awt.event.ActionEvent evt) {
		String[] runTime = stopWatchLabel.getText().split(":");
		float time = (Float.parseFloat(runTime[0]) * 60) + (Float.parseFloat(runTime[1]) * 1) + (Float.parseFloat(runTime[2]) / 60);
		insert(getFormattedDate(),
				Integer.parseInt(pushupLabel.getText()),
				Integer.parseInt(situpLabel.getText()),
				Float.parseFloat(distanceLabel.getText()),
				time);
	}

	private void viewDatabaseActionPerformed(java.awt.event.ActionEvent evt) {
		selectAll();
	}

	// Variables declaration - do not modify
	private javax.swing.JPanel jPanel1;

	private javax.swing.JLabel dateLabel;

	private javax.swing.JLabel pushupFieldLabel;
	private javax.swing.JLabel situpFieldLabel;
	private javax.swing.JLabel distanceFieldLabel;

	private javax.swing.JTextField pushupInputField;
	private javax.swing.JTextField situpInputField;
	private javax.swing.JTextField distanceInputField;

	private javax.swing.JButton recordPushButton;
	private javax.swing.JButton recordSitButton;
	private javax.swing.JButton recordDistanceButton;

	private javax.swing.JLabel maxPushupLabel;
	private javax.swing.JLabel maxSitupLabel;
	private javax.swing.JLabel maxDistanceLabel;
	private javax.swing.JLabel pushupLabel;
	private javax.swing.JLabel situpLabel;
	private javax.swing.JLabel distanceLabel;

	private javax.swing.JLabel stopWatchLabel;
	private javax.swing.JLabel timerLabel;
	private javax.swing.JTextField timerInputField;

	private javax.swing.JButton stopWatchStartButton;
	private javax.swing.JButton stopWatchResetButton;
	private javax.swing.JButton timerStartButton;
	private javax.swing.JButton timerResetButton;

	private javax.swing.JButton submitButton;
	private javax.swing.JButton viewDatabaseButton;
	// End of variables declaration
}
